#! /c/iverilog/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision + 0;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_011C9F18 .scope module, "multiplexer_8_to_1_tb" "multiplexer_8_to_1_tb" 2 1;
 .timescale 0 0;
v010505B8_0 .var "A", 7 0;
v010508D0_0 .var "name", 191 0;
v01050980_0 .net "out", 0 0, L_0108B5B8; 1 drivers
v01050A30_0 .var "sel", 2 0;
S_011CA0B0 .scope module, "uut" "multiplexer_8_to_1" 2 7, 3 1, S_011C9F18;
 .timescale 0 0;
v01044030_0 .net "A", 7 0, v010505B8_0; 1 drivers
v010440E0_0 .net *"_s0", 2 0, C4<000>; 1 drivers
v01044240_0 .net *"_s11", 0 0, L_01050508; 1 drivers
v01043F28_0 .net *"_s12", 2 0, C4<010>; 1 drivers
v01043E78_0 .net *"_s14", 0 0, L_01050610; 1 drivers
v01044190_0 .net *"_s17", 0 0, L_0108B090; 1 drivers
v01043F80_0 .net *"_s18", 2 0, C4<011>; 1 drivers
v010443F8_0 .net *"_s2", 0 0, L_01050AE0; 1 drivers
v01044450_0 .net *"_s20", 0 0, L_0108AFE0; 1 drivers
v01043FD8_0 .net *"_s23", 0 0, L_0108B4B0; 1 drivers
v010442F0_0 .net *"_s24", 2 0, C4<100>; 1 drivers
v01043E20_0 .net *"_s26", 0 0, L_0108B3A8; 1 drivers
v01043D70_0 .net *"_s29", 0 0, L_0108B0E8; 1 drivers
v01044088_0 .net *"_s30", 2 0, C4<101>; 1 drivers
v01043ED0_0 .net *"_s32", 0 0, L_0108AE28; 1 drivers
v01044298_0 .net *"_s35", 0 0, L_0108ADD0; 1 drivers
v01044138_0 .net *"_s36", 2 0, C4<110>; 1 drivers
v01044348_0 .net *"_s38", 0 0, L_0108AE80; 1 drivers
v010441E8_0 .net *"_s41", 0 0, L_0108B560; 1 drivers
v010443A0_0 .net *"_s42", 2 0, C4<111>; 1 drivers
v01043D18_0 .net *"_s44", 0 0, L_0108B668; 1 drivers
v01043DC8_0 .net *"_s47", 0 0, L_0108AF30; 1 drivers
v01050B90_0 .net *"_s48", 0 0, C4<x>; 1 drivers
v01050A88_0 .net *"_s5", 0 0, L_01050B38; 1 drivers
v01050820_0 .net *"_s50", 0 0, L_0108B038; 1 drivers
v010509D8_0 .net *"_s52", 0 0, L_0108B140; 1 drivers
v01050770_0 .net *"_s54", 0 0, L_0108AF88; 1 drivers
v01050668_0 .net *"_s56", 0 0, L_0108B198; 1 drivers
v01050560_0 .net *"_s58", 0 0, L_0108B610; 1 drivers
v01050458_0 .net *"_s6", 2 0, C4<001>; 1 drivers
v01050878_0 .net *"_s60", 0 0, L_0108B1F0; 1 drivers
v010506C0_0 .net *"_s62", 0 0, L_0108B248; 1 drivers
v01050718_0 .net *"_s8", 0 0, L_010504B0; 1 drivers
v010507C8_0 .alias "out", 0 0, v01050980_0;
v01050928_0 .net "sel", 2 0, v01050A30_0; 1 drivers
L_01050AE0 .cmp/eq 3, v01050A30_0, C4<000>;
L_01050B38 .part v010505B8_0, 0, 1;
L_010504B0 .cmp/eq 3, v01050A30_0, C4<001>;
L_01050508 .part v010505B8_0, 1, 1;
L_01050610 .cmp/eq 3, v01050A30_0, C4<010>;
L_0108B090 .part v010505B8_0, 2, 1;
L_0108AFE0 .cmp/eq 3, v01050A30_0, C4<011>;
L_0108B4B0 .part v010505B8_0, 3, 1;
L_0108B3A8 .cmp/eq 3, v01050A30_0, C4<100>;
L_0108B0E8 .part v010505B8_0, 4, 1;
L_0108AE28 .cmp/eq 3, v01050A30_0, C4<101>;
L_0108ADD0 .part v010505B8_0, 5, 1;
L_0108AE80 .cmp/eq 3, v01050A30_0, C4<110>;
L_0108B560 .part v010505B8_0, 6, 1;
L_0108B668 .cmp/eq 3, v01050A30_0, C4<111>;
L_0108AF30 .part v010505B8_0, 7, 1;
L_0108B038 .functor MUXZ 1, C4<x>, L_0108AF30, L_0108B668, C4<>;
L_0108B140 .functor MUXZ 1, L_0108B038, L_0108B560, L_0108AE80, C4<>;
L_0108AF88 .functor MUXZ 1, L_0108B140, L_0108ADD0, L_0108AE28, C4<>;
L_0108B198 .functor MUXZ 1, L_0108AF88, L_0108B0E8, L_0108B3A8, C4<>;
L_0108B610 .functor MUXZ 1, L_0108B198, L_0108B4B0, L_0108AFE0, C4<>;
L_0108B1F0 .functor MUXZ 1, L_0108B610, L_0108B090, L_01050610, C4<>;
L_0108B248 .functor MUXZ 1, L_0108B1F0, L_01050508, L_010504B0, C4<>;
L_0108B5B8 .functor MUXZ 1, L_0108B248, L_01050B38, L_01050AE0, C4<>;
    .scope S_011C9F18;
T_0 ;
    %movi 8, 842086453, 32;
    %movi 40, 1734877234, 32;
    %movi 72, 542337390, 32;
    %movi 104, 1919969652, 32;
    %movi 136, 1634869313, 32;
    %movi 168, 1265987191, 32;
    %movi 200, 32, 8;
    %set/v v010508D0_0, 8, 192;
    %vpi_call 2 11 "$display", "Kunwar Arpit Singh";
    %vpi_call 2 12 "$dumpfile", "assign2_problem3_mutliplexer_8_to_1.vcd";
    %vpi_call 2 13 "$dumpvars", 2'sb01, S_011C9F18;
    %vpi_call 2 14 "$display", "Kunwar Arpit Singh";
    %movi 8, 202, 8;
    %set/v v010505B8_0, 8, 8;
    %vpi_call 2 16 "$display", "Output for all the cases";
    %vpi_call 2 17 "$display", "A (Binary & Decimal) | Output(Binary) | Output(Decimal)";
    %vpi_call 2 18 "$display", "------------------------";
    %set/v v01050A30_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 20 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 1, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 22 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 2, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 24 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 3, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 26 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 4, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 28 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 5, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 30 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 6, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 32 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %set/v v01050A30_0, 1, 3;
    %delay 10, 0;
    %vpi_call 2 34 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 53, 8;
    %set/v v010505B8_0, 8, 8;
    %vpi_call 2 37 "$display", "Output for all the cases";
    %vpi_call 2 38 "$display", "A (Binary & Decimal) | Output(Binary) | Output(Decimal)";
    %vpi_call 2 39 "$display", "------------------------";
    %set/v v01050A30_0, 0, 3;
    %delay 10, 0;
    %vpi_call 2 41 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 1, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 43 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 2, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 45 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 3, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 47 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 4, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 49 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 5, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 51 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %movi 8, 6, 3;
    %set/v v01050A30_0, 8, 3;
    %delay 10, 0;
    %vpi_call 2 53 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %set/v v01050A30_0, 1, 3;
    %delay 10, 0;
    %vpi_call 2 55 "$display", "%b  |  %d  |  %b  |  %d  |  %b  |  %d  ", v010505B8_0, v010505B8_0, v01050A30_0, v01050A30_0, v01050980_0, v01050980_0;
    %vpi_call 2 56 "$finish";
    %end;
    .thread T_0;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "assign2_problem3_mutliplexer_8_to_1_tb.v";
    "assign2_problem3_mutliplexer_8_to_1.v";
